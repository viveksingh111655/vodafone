# @version $Id: //product/Siebel/version/0.6.0.0.0/buildtools/build.properties#1 $$Change: 842106 $
# ---------------------------------------------------------------------------------
# Dynamo enviroment properties.  Recommended that you set DYNAMO_HOME AND DAS_ROOT
# as environment properties for your OS, or you can set things in userenv.properties.
#
dynamo.home=${env.DYNAMO_HOME}
dynamo.root.dir=${dynamo.home}/..
das.root.dir=${env.DYNAMO_ROOT}/DAS

# ---------------------------------------------------------------------------------
# Names of a server and module to be run by the startsqlrepository task to import data
#
module.name=Siebel
install.dir=${dynamo.root.dir}/${module.name}
install.j2ee.dir=${install.dir}/j2ee-apps
install.versioned.dir=${install.dir}/Versioned
install.publishingagent.dir=${install.dir}/PublishingAgent

#----------------------------------------------------------------------------------
# Tells the clean task to exclude compiled jsps from deletion
# Comment this out if you want it to clean them too
#
clean.task.excludes=**/jspbuild/**


# ---------------------------------------------------------------------------------
# This is the directory the ANT task menu will used to write the javadocs
# for all defined submodules 
# 
# This should be overridden to match your local environment needs.
#
global.javadoc.dir=../doc/javadoc

# Javadoc external references
#
jdk.docs.dir=${jdk.home}/docs/api
dynamo.docs.dir=${dynamo.root.dir}/manuals/dynamo/apidoc

# ---------------------------------------------------------------------------------
# base directory for development specific configuration files
# such as code check tools checkstyle and pmd.  Note the directory setting is a bit 
# counter-intuitive.  This is because checkstlye, pmd, and jalopy are all run
# from the sub-modules and not this main module.
#
global.etc.dir=${global.dir}/../etc

# ---------------------------------------------------------------------------------
# Executables
#
# Sqlplus.  Why sqlplus instead of ANT's sql task?  Well for one sqlplus doesn't
# barf when it has to run a ddl file which mixes both stored procedures and table 
# creation.  The other reason is this allows the project to use sql statements
# fit for DBAs.
#
# For windows consider sqlplusw if you are having issues with sql statements that 
# relate to I18N
#
# sqlplus.win.cmd=sqlplusw
sqlplus.win.cmd=sqlplus
sqlplus.unix.cmd=sqlplus

# ATG's Darina command to create J2EE applications
#
rundarina.win.cmd=${dynamo.home}/bin/runDarina.bat
rundarina.unix.cmd=${dynamo.home}/bin/runDarina


# ********************************************************************************
# ********************************************************************************
#
# Common values used by sub modules
#
# ********************************************************************************
# ********************************************************************************

# ---------------------------------------------------------------------------------
# Basic directory settings that identify common directory structures in each
# submodule
#
src.dir=${basedir}/src
versioned.dir=${basedir}/Versioned
src.versioned.dir=${versioned.dir}/src
publishingagent.dir=${basedir}/PublishingAgent
src.publishingagent.dir=${publishingagent.dir}/src
mappings.dir=${basedir}/mappings
gen-src.dir=${basedir}/gensrc
wsdl.dir=${basedir}/src/META-INF/wsdl
etc.dir=${basedir}/etc
config.dir=${basedir}/config
config.versioned.dir=${versioned.dir}/config
config.publishingagent.dir=${publishingagent.dir}/config
liveconfig.dir=${basedir}/liveconfig
inf.dir=${basedir}/META-INF
sql.dir=${basedir}/sql
j2ee.dir=${basedir}/j2ee
cim.plugins.src.dir=${basedir}/src
cim.dynamo.lib.dir=${dynamo.root.dir}/CIM/lib
cim.devenv.lib.dir=${dynamo.home}/../../CIM/build/lib
test.dir=${basedir}/test
test.lib.dir=${test.dir}/lib
test.src.dir=${test.dir}/src

# ---------------------------------------------------------------------------------
# Basic directory settings that identify the build directory structures for each
# submodule
#
build.dir=${basedir}/build
build.versioned.dir=${versioned.dir}/build
build.publishingagent.dir=${publishingagent.dir}/build
build.tempconfig.dir=${build.dir}/tempconfig
build.tempconfig.versioned.dir=${build.versioned.dir}/tempconfig
build.tempconfig.publishingagent.dir=${build.publishingagent.dir}/tempconfig
build.config.dir=${build.dir}/config
build.sql.dir=${build.dir}/sql
build.tempddl.dir=${build.dir}/tempddl
javadoc.dir=${build.dir}/javadoc
classes.dir=${build.dir}/classes
classes.versioned.dir=${build.versioned.dir}/classes
classes.publishingagent.dir=${build.publishingagent.dir}/classes
cim.plugins.build.dir=${basedir}/build
cim.plugins.classes.dir=${cim.plugins.build.dir}/classes
testclasses.dir=${build.dir}/testclasses
reports.dir=${build.dir}/reports
ear.dir=${build.dir}/ear
javadoc.dir=${build.dir}/javadoc
temp.ear.dir=${build.dir}/tempear

# ********************************************************************************
# ********************************************************************************
#
# Other Tools and Features
#
# ********************************************************************************
# ********************************************************************************

# ---------------------------------------------------------------------------------
# J2EE Build and deployment settings
#

# Web app names to use in pattern substitutions
#
default.web.app.name=store.war
docroot.web.app.name=storedocroot.war
default.merch.web.app.name=store-merchandising.war

# This is substituted in the various places where the context root is
# required in the configuration XML and .properties files.
#
default.context.root=crs
docroot.context.root=crsdocroot
default.merch.context.root=crs-merchandising

# Uncommenting this tells the deploy steps to precompile the JSPs.  
# Commented out here because most development tasks won't want this.  
# This is useful only when creating a build for release.
# 
# darina.precompile.arg=-jsp-compile

# ---------------------------------------------------------------------------------
# Release Management (Application Packaging) settings
#

# ---------------------------------------------------------------------------------
# The following properties are used by and for the creation of deployment builds
#

# packaging related properties
version.file=build_version.txt
dist.dir=${dynamo.root.dir}/${install.unit}

package.dir=${basedir}/../releases/package
archive.dir=${basedir}/../releases/archive
script.dir=${basedir}/../releases/scripts

# Stuff for web asset packaging
web.dist.dir=${basedir}/webassets/docroot
web.archive.dir=${basedir}/../releases/webarchive
